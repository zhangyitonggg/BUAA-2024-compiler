INTTK int
IDENFR a
LBRACK [
INTCON 3
PLUS +
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
COMMA ,
INTCON 4
COMMA ,
INTCON 5
COMMA ,
INTCON 6
RBRACE }
SEMICN ;
INTTK int
IDENFR foo
LPARENT (
INTTK int
IDENFR x
COMMA ,
INTTK int
IDENFR y
LBRACK [
RBRACK ]
RPARENT )
LBRACE {
RETURNTK return
IDENFR x
PLUS +
IDENFR y
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
RBRACE }
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR c
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
RBRACE }
SEMICN ;
INTTK int
IDENFR x
ASSIGN =
IDENFR foo
LPARENT (
IDENFR a
LBRACK [
INTCON 4
RBRACK ]
COMMA ,
IDENFR a
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "%d - %d\n"
COMMA ,
IDENFR x
COMMA ,
IDENFR foo
LPARENT (
IDENFR c
LBRACK [
INTCON 0
RBRACK ]
COMMA ,
IDENFR c
RPARENT )
RPARENT )
SEMICN ;
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
