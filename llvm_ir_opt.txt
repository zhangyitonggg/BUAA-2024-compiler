declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)




define dso_local i32 @func(i8* %a0, i8* %a1, i8* %a2, i8* %a3, i8* %a4, i8* %a5, i8* %a6) {
b0:
    %v7 = alloca i8*
    %v6 = alloca i8*
    %v5 = alloca i8*
    %v4 = alloca i8*
    %v3 = alloca i8*
    %v2 = alloca i8*
    %v1 = alloca i8*
    store i8* %a0, i8** %v1
    store i8* %a1, i8** %v2
    store i8* %a2, i8** %v3
    store i8* %a3, i8** %v4
    store i8* %a4, i8** %v5
    store i8* %a5, i8** %v6
    store i8* %a6, i8** %v7
    ret i32 1

}

define dso_local i32 @main() {
b8:
    %v9 = alloca [10 x i8]
    %v10 = getelementptr inbounds [10 x i8], [10 x i8]* %v9, i32 0, i32 0
    store i8 97, i8* %v10
    %v11 = getelementptr inbounds i8, i8* %v10, i32 1
    store i8 97, i8* %v11
    %v12 = getelementptr inbounds i8, i8* %v10, i32 2
    store i8 97, i8* %v12
    %v13 = getelementptr inbounds i8, i8* %v10, i32 3
    store i8 97, i8* %v13
    %v14 = getelementptr inbounds i8, i8* %v10, i32 4
    store i8 0, i8* %v14
    %v15 = getelementptr inbounds i8, i8* %v10, i32 5
    store i8 0, i8* %v15
    %v16 = getelementptr inbounds i8, i8* %v10, i32 6
    store i8 0, i8* %v16
    %v17 = getelementptr inbounds i8, i8* %v10, i32 7
    store i8 0, i8* %v17
    %v18 = getelementptr inbounds i8, i8* %v10, i32 8
    store i8 0, i8* %v18
    %v19 = getelementptr inbounds i8, i8* %v10, i32 9
    store i8 0, i8* %v19
    %v20 = getelementptr inbounds [10 x i8], [10 x i8]* %v9, i32 0, i32 0
    %v21 = getelementptr inbounds [10 x i8], [10 x i8]* %v9, i32 0, i32 0
    %v22 = getelementptr inbounds [10 x i8], [10 x i8]* %v9, i32 0, i32 0
    %v23 = getelementptr inbounds [10 x i8], [10 x i8]* %v9, i32 0, i32 0
    %v24 = getelementptr inbounds [10 x i8], [10 x i8]* %v9, i32 0, i32 0
    %v25 = getelementptr inbounds [10 x i8], [10 x i8]* %v9, i32 0, i32 0
    %v26 = getelementptr inbounds [10 x i8], [10 x i8]* %v9, i32 0, i32 0
    %v27 = call i32 @func(i8*  %v20, i8*  %v21, i8*  %v22, i8*  %v23, i8*  %v24, i8*  %v25, i8*  %v26)
    ret i32 0

}

