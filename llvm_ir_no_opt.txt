declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i8)
declare void @putstr(i8*)


@str.0 = constant [2 x i8] c"\0A\00"


define dso_local i32 @getIndex(i32* %a0, i32 %a1) {
b0:
    %v2 = alloca i32
    %v1 = alloca i32*
    store i32* %a0, i32** %v1
    store i32 %a1, i32* %v2
    %v3 = load i32*, i32** %v1
    %v4 = load i32, i32* %v2
    %v5 = getelementptr inbounds i32, i32* %v3, i32 %v4
    %v6 = load i32, i32* %v5
    ret i32 %v6

}

define dso_local i32 @setIndex(i32* %a0, i32 %a1, i32 %a2) {
b7:
    %v11 = alloca i32
    %v10 = alloca i32
    %v9 = alloca i32
    %v8 = alloca i32*
    store i32* %a0, i32** %v8
    store i32 %a1, i32* %v9
    store i32 %a2, i32* %v10
    %v12 = load i32*, i32** %v8
    %v13 = load i32, i32* %v9
    %v14 = getelementptr inbounds i32, i32* %v12, i32 %v13
    %v15 = load i32, i32* %v14
    store i32 %v15, i32* %v11
    %v16 = load i32*, i32** %v8
    %v17 = load i32, i32* %v9
    %v18 = getelementptr inbounds i32, i32* %v16, i32 %v17
    %v19 = load i32, i32* %v10
    store i32 %v19, i32* %v18
    %v20 = load i32, i32* %v11
    ret i32 %v20

}

define dso_local i32 @main() {
b21:
    %v28 = alloca [5 x i32]
    %v22 = alloca [5 x i32]
    %v23 = getelementptr inbounds [5 x i32], [5 x i32]* %v22, i32 0, i32 0
    store i32 0, i32* %v23
    %v24 = getelementptr inbounds i32, i32* %v23, i32 1
    store i32 1, i32* %v24
    %v25 = getelementptr inbounds i32, i32* %v23, i32 2
    store i32 2, i32* %v25
    %v26 = getelementptr inbounds i32, i32* %v23, i32 3
    store i32 3, i32* %v26
    %v27 = getelementptr inbounds i32, i32* %v23, i32 4
    store i32 4, i32* %v27
    %v29 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    store i32 0, i32* %v29
    %v30 = getelementptr inbounds i32, i32* %v29, i32 1
    store i32 0, i32* %v30
    %v31 = getelementptr inbounds i32, i32* %v29, i32 2
    store i32 0, i32* %v31
    %v32 = getelementptr inbounds i32, i32* %v29, i32 3
    store i32 0, i32* %v32
    %v33 = getelementptr inbounds i32, i32* %v29, i32 4
    store i32 0, i32* %v33
    %v34 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v35 = getelementptr inbounds [5 x i32], [5 x i32]* %v22, i32 0, i32 0
    %v36 = call i32 @getIndex(i32*  %v35, i32  0)
    %v37 = add i32 %v36, 0
    %v38 = call i32 @setIndex(i32*  %v34, i32  0, i32  %v37)
    call void @putint(i32  %v38)
    %v39 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v39)
    %v40 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v41 = getelementptr inbounds [5 x i32], [5 x i32]* %v22, i32 0, i32 0
    %v42 = call i32 @getIndex(i32*  %v41, i32  1)
    %v43 = add i32 %v42, 1
    %v44 = call i32 @setIndex(i32*  %v40, i32  1, i32  %v43)
    call void @putint(i32  %v44)
    %v45 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v45)
    %v46 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v47 = getelementptr inbounds [5 x i32], [5 x i32]* %v22, i32 0, i32 0
    %v48 = call i32 @getIndex(i32*  %v47, i32  2)
    %v49 = add i32 %v48, 2
    %v50 = call i32 @setIndex(i32*  %v46, i32  2, i32  %v49)
    call void @putint(i32  %v50)
    %v51 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v51)
    %v52 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v53 = getelementptr inbounds [5 x i32], [5 x i32]* %v22, i32 0, i32 0
    %v54 = call i32 @getIndex(i32*  %v53, i32  3)
    %v55 = add i32 %v54, 3
    %v56 = call i32 @setIndex(i32*  %v52, i32  3, i32  %v55)
    call void @putint(i32  %v56)
    %v57 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v57)
    %v58 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v59 = getelementptr inbounds [5 x i32], [5 x i32]* %v22, i32 0, i32 0
    %v60 = call i32 @getIndex(i32*  %v59, i32  4)
    %v61 = add i32 %v60, 4
    %v62 = call i32 @setIndex(i32*  %v58, i32  4, i32  %v61)
    call void @putint(i32  %v62)
    %v63 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v63)
    %v64 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v65 = call i32 @getIndex(i32*  %v64, i32  0)
    call void @putint(i32  %v65)
    %v66 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v66)
    %v67 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v68 = call i32 @getIndex(i32*  %v67, i32  1)
    call void @putint(i32  %v68)
    %v69 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v69)
    %v70 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v71 = call i32 @getIndex(i32*  %v70, i32  2)
    call void @putint(i32  %v71)
    %v72 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v72)
    %v73 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v74 = call i32 @getIndex(i32*  %v73, i32  3)
    call void @putint(i32  %v74)
    %v75 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v75)
    %v76 = getelementptr inbounds [5 x i32], [5 x i32]* %v28, i32 0, i32 0
    %v77 = call i32 @getIndex(i32*  %v76, i32  4)
    call void @putint(i32  %v77)
    %v78 = getelementptr inbounds [2 x i8], [2 x i8]* @str.0, i32 0, i32 0
    call void @putstr(i8*  %v78)
    ret i32 0

}

