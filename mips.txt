# by zyt 22373337
.data

g_global_var :.space 4

g_str :.byte 51, 39, 0, 0, 0, 0, 0, 0, 0, 0

str.0 : .asciiz "22373040\n"
str.1 : .asciiz "\n"
str.2 : .asciiz "i is 4 or 9!\n"
str.3 : .asciiz "j is 32!\n"
str.4 : .asciiz "Sum of array elements: "


.text
main:
b63:
   # %v154 = alloca [20 x i32]
    li $k0, -100
    addu $k0, $sp, $k0
    sw $k0, -4($sp)
   # %v83 = alloca [10 x i8]
    li $k0, -112
    addu $k0, $sp, $k0
    sw $k0, -8($sp)
   # %v70 = alloca [12 x i8]
    li $k0, -124
    addu $k0, $sp, $k0
    sw $k0, -12($sp)
   # %v69 = alloca [10 x i32]
    li $k0, -164
    addu $k0, $sp, $k0
    sw $k0, -16($sp)
   # call void @printName()
    sw $gp, -168($sp)
    sw $fp, -172($sp)
    sw $v1, -176($sp)
    sw $t0, -180($sp)
    sw $ra, -184($sp)
    li $k0, -184
    addu $sp, $sp, $k0
    jal printName
    lw $ra, 0($sp)
    li $k0, 184
    addu $sp, $sp, $k0
    lw $gp, -168($sp)
    lw $fp, -172($sp)
    lw $v1, -176($sp)
    lw $t0, -180($sp)
   # %v67 = zext i8 115 to i32
    li $k0, 115
    move $v1, $k0
   # %v71 = getelementptr inbounds [12 x i8], [12 x i8]* %v70, i32 0, i32 0
    lw $k0, -12($sp)
    li $k1, 0
    addu $gp, $k0, $k1
   # store i8 113, i8* %v71
    li $k0, 113
    sb $k0, 0($gp)
   # %v72 = getelementptr inbounds i8, i8* %v71, i32 1
    li $k1, 1
    addu $fp, $gp, $k1
   # store i8 119, i8* %v72
    li $k0, 119
    sb $k0, 0($fp)
   # %v73 = getelementptr inbounds i8, i8* %v71, i32 2
    li $k1, 2
    addu $fp, $gp, $k1
   # store i8 101, i8* %v73
    li $k0, 101
    sb $k0, 0($fp)
   # %v74 = getelementptr inbounds i8, i8* %v71, i32 3
    li $k1, 3
    addu $fp, $gp, $k1
   # store i8 114, i8* %v74
    li $k0, 114
    sb $k0, 0($fp)
   # %v75 = getelementptr inbounds i8, i8* %v71, i32 4
    li $k1, 4
    addu $fp, $gp, $k1
   # store i8 116, i8* %v75
    li $k0, 116
    sb $k0, 0($fp)
   # %v76 = getelementptr inbounds i8, i8* %v71, i32 5
    li $k1, 5
    addu $fp, $gp, $k1
   # store i8 121, i8* %v76
    li $k0, 121
    sb $k0, 0($fp)
   # %v77 = getelementptr inbounds i8, i8* %v71, i32 6
    li $k1, 6
    addu $fp, $gp, $k1
   # store i8 117, i8* %v77
    li $k0, 117
    sb $k0, 0($fp)
   # %v78 = getelementptr inbounds i8, i8* %v71, i32 7
    li $k1, 7
    addu $fp, $gp, $k1
   # store i8 105, i8* %v78
    li $k0, 105
    sb $k0, 0($fp)
   # %v79 = getelementptr inbounds i8, i8* %v71, i32 8
    li $k1, 8
    addu $fp, $gp, $k1
   # store i8 111, i8* %v79
    li $k0, 111
    sb $k0, 0($fp)
   # %v80 = getelementptr inbounds i8, i8* %v71, i32 9
    li $k1, 9
    addu $fp, $gp, $k1
   # store i8 112, i8* %v80
    li $k0, 112
    sb $k0, 0($fp)
   # %v81 = getelementptr inbounds i8, i8* %v71, i32 10
    li $k1, 10
    addu $fp, $gp, $k1
   # store i8 10, i8* %v81
    li $k0, 10
    sb $k0, 0($fp)
   # %v82 = getelementptr inbounds i8, i8* %v71, i32 11
    li $k1, 11
    addu $gp, $gp, $k1
   # store i8 0, i8* %v82
    li $k0, 0
    sb $k0, 0($gp)
   # %v84 = getelementptr inbounds [10 x i8], [10 x i8]* %v83, i32 0, i32 0
    lw $k0, -8($sp)
    li $k1, 0
    addu $gp, $k0, $k1
   # store i8 115, i8* %v84
    li $k0, 115
    sb $k0, 0($gp)
   # %v85 = getelementptr inbounds i8, i8* %v84, i32 1
    li $k1, 1
    addu $fp, $gp, $k1
   # store i8 116, i8* %v85
    li $k0, 116
    sb $k0, 0($fp)
   # %v86 = getelementptr inbounds i8, i8* %v84, i32 2
    li $k1, 2
    addu $fp, $gp, $k1
   # store i8 114, i8* %v86
    li $k0, 114
    sb $k0, 0($fp)
   # %v87 = getelementptr inbounds i8, i8* %v84, i32 3
    li $k1, 3
    addu $fp, $gp, $k1
   # store i8 0, i8* %v87
    li $k0, 0
    sb $k0, 0($fp)
   # %v88 = getelementptr inbounds i8, i8* %v84, i32 4
    li $k1, 4
    addu $fp, $gp, $k1
   # store i8 0, i8* %v88
    li $k0, 0
    sb $k0, 0($fp)
   # %v89 = getelementptr inbounds i8, i8* %v84, i32 5
    li $k1, 5
    addu $fp, $gp, $k1
   # store i8 0, i8* %v89
    li $k0, 0
    sb $k0, 0($fp)
   # %v90 = getelementptr inbounds i8, i8* %v84, i32 6
    li $k1, 6
    addu $fp, $gp, $k1
   # store i8 0, i8* %v90
    li $k0, 0
    sb $k0, 0($fp)
   # %v91 = getelementptr inbounds i8, i8* %v84, i32 7
    li $k1, 7
    addu $fp, $gp, $k1
   # store i8 0, i8* %v91
    li $k0, 0
    sb $k0, 0($fp)
   # %v92 = getelementptr inbounds i8, i8* %v84, i32 8
    li $k1, 8
    addu $fp, $gp, $k1
   # store i8 0, i8* %v92
    li $k0, 0
    sb $k0, 0($fp)
   # %v93 = getelementptr inbounds i8, i8* %v84, i32 9
    li $k1, 9
    addu $gp, $gp, $k1
   # store i8 0, i8* %v93
    li $k0, 0
    sb $k0, 0($gp)
    li $gp, 0
   # br label %b94
    j b94
b94:
   # %v99 = icmp slt i32 %p6, 10
    li $k1, 10
    slt $t0, $gp, $k1
   # %v101 = icmp ne i32 %v100, 0
    li $k1, 0
    sne $t0, $t0, $k1
   # br i1 %v101, label %b96, label %b97
    beq $t0, $zero, b97
    j b96
b95:
    li $k1, 1
   # %v103 = add i32 %p6, 1
    addu $gp, $gp, $k1
    move $gp, $gp
    move $fp, $t0
   # br label %b94
    j b94
b96:
   # %v105 = getelementptr inbounds [10 x i32], [10 x i32]* %v69, i32 0, i32 %p6
    lw $k0, -16($sp)
    sll $k1, $gp, 2
    addu $t0, $k0, $k1
   # store i32 %p6, i32* %v105
    sw $gp, 0($t0)
   # %v111 = icmp eq i32 %p6, 4
    li $k1, 4
    seq $t0, $gp, $k1
   # br i1 %v111, label %b112, label %b109
    beq $t0, $zero, b109
    j b112
b97:
   # %v155 = getelementptr inbounds [20 x i32], [20 x i32]* %v154, i32 0, i32 0
    lw $k0, -4($sp)
    li $k1, 0
    addu $v1, $k0, $k1
   # store i32 3, i32* %v155
    li $k0, 3
    sw $k0, 0($v1)
   # %v156 = getelementptr inbounds i32, i32* %v155, i32 1
    li $k1, 4
    addu $fp, $v1, $k1
   # store i32 2, i32* %v156
    li $k0, 2
    sw $k0, 0($fp)
   # %v157 = getelementptr inbounds i32, i32* %v155, i32 2
    li $k1, 8
    addu $fp, $v1, $k1
   # store i32 1, i32* %v157
    li $k0, 1
    sw $k0, 0($fp)
   # %v158 = getelementptr inbounds i32, i32* %v155, i32 3
    li $k1, 12
    addu $fp, $v1, $k1
   # store i32 0, i32* %v158
    li $k0, 0
    sw $k0, 0($fp)
   # %v159 = getelementptr inbounds i32, i32* %v155, i32 4
    li $k1, 16
    addu $fp, $v1, $k1
   # store i32 0, i32* %v159
    li $k0, 0
    sw $k0, 0($fp)
   # %v160 = getelementptr inbounds i32, i32* %v155, i32 5
    li $k1, 20
    addu $fp, $v1, $k1
   # store i32 0, i32* %v160
    li $k0, 0
    sw $k0, 0($fp)
   # %v161 = getelementptr inbounds i32, i32* %v155, i32 6
    li $k1, 24
    addu $fp, $v1, $k1
   # store i32 0, i32* %v161
    li $k0, 0
    sw $k0, 0($fp)
   # %v162 = getelementptr inbounds i32, i32* %v155, i32 7
    li $k1, 28
    addu $fp, $v1, $k1
   # store i32 0, i32* %v162
    li $k0, 0
    sw $k0, 0($fp)
   # %v163 = getelementptr inbounds i32, i32* %v155, i32 8
    li $k1, 32
    addu $fp, $v1, $k1
   # store i32 0, i32* %v163
    li $k0, 0
    sw $k0, 0($fp)
   # %v164 = getelementptr inbounds i32, i32* %v155, i32 9
    li $k1, 36
    addu $fp, $v1, $k1
   # store i32 0, i32* %v164
    li $k0, 0
    sw $k0, 0($fp)
   # %v165 = getelementptr inbounds i32, i32* %v155, i32 10
    li $k1, 40
    addu $fp, $v1, $k1
   # store i32 0, i32* %v165
    li $k0, 0
    sw $k0, 0($fp)
   # %v166 = getelementptr inbounds i32, i32* %v155, i32 11
    li $k1, 44
    addu $fp, $v1, $k1
   # store i32 0, i32* %v166
    li $k0, 0
    sw $k0, 0($fp)
   # %v167 = getelementptr inbounds i32, i32* %v155, i32 12
    li $k1, 48
    addu $fp, $v1, $k1
   # store i32 0, i32* %v167
    li $k0, 0
    sw $k0, 0($fp)
   # %v168 = getelementptr inbounds i32, i32* %v155, i32 13
    li $k1, 52
    addu $fp, $v1, $k1
   # store i32 0, i32* %v168
    li $k0, 0
    sw $k0, 0($fp)
   # %v169 = getelementptr inbounds i32, i32* %v155, i32 14
    li $k1, 56
    addu $fp, $v1, $k1
   # store i32 0, i32* %v169
    li $k0, 0
    sw $k0, 0($fp)
   # %v170 = getelementptr inbounds i32, i32* %v155, i32 15
    li $k1, 60
    addu $fp, $v1, $k1
   # store i32 0, i32* %v170
    li $k0, 0
    sw $k0, 0($fp)
   # %v171 = getelementptr inbounds i32, i32* %v155, i32 16
    li $k1, 64
    addu $fp, $v1, $k1
   # store i32 0, i32* %v171
    li $k0, 0
    sw $k0, 0($fp)
   # %v172 = getelementptr inbounds i32, i32* %v155, i32 17
    li $k1, 68
    addu $fp, $v1, $k1
   # store i32 0, i32* %v172
    li $k0, 0
    sw $k0, 0($fp)
   # %v173 = getelementptr inbounds i32, i32* %v155, i32 18
    li $k1, 72
    addu $fp, $v1, $k1
   # store i32 0, i32* %v173
    li $k0, 0
    sw $k0, 0($fp)
   # %v174 = getelementptr inbounds i32, i32* %v155, i32 19
    li $k1, 76
    addu $v1, $v1, $k1
   # store i32 0, i32* %v174
    li $k0, 0
    sw $k0, 0($v1)
    li $v1, 0
    li $fp, 0
   # br label %b177
    j b177
b107:
   # %v123 = getelementptr inbounds [14 x i8], [14 x i8]* @str.2, i32 0, i32 0
    la $k0, str.2
    li $k1, 0
    addu $t0, $k0, $k1
   # call void @putstr(i8*  %v123)
    move $k1, $a0
    move $a0, $t0
    li $v0, 4
    syscall
    move $a0, $k1
    li $t0, 1
   # br label %b125
    j b125
b213:
    move $t0, $fp
   # br label %b108
    j b108
b108:
    li $k1, 2
   # %v148 = srem i32 %p6, 2
    div $gp, $k1
    mfhi $t1
   # %v149 = icmp eq i32 %v148, 0
    li $k1, 0
    seq $t1, $t1, $k1
   # br i1 %v149, label %b144, label %b145
    beq $t1, $zero, b145
    j b144
b109:
   # %v120 = icmp sge i32 %p6, 9
    li $k1, 9
    sge $t0, $gp, $k1
   # %v122 = icmp ne i32 %v121, 0
    li $k1, 0
    sne $t0, $t0, $k1
   # br i1 %v122, label %b107, label %b213
    beq $t0, $zero, b213
    j b107
b112:
   # %v115 = zext i8 %v68 to i32
    move $t0, $v1
   # %v116 = icmp slt i32 %p6, %v115
    slt $t0, $gp, $t0
   # %v118 = icmp ne i32 %v117, 0
    li $k1, 0
    sne $t0, $t0, $k1
   # br i1 %v118, label %b107, label %b109
    beq $t0, $zero, b109
    j b107
b125:
   # br label %b127
    j b127
b126:
   # %v131 = add i32 %p4, %p4
    addu $t0, $t0, $t0
    move $t0, $t0
   # br label %b125
    j b125
b127:
   # %v136 = icmp sgt i32 %p4, 100
    li $k1, 100
    sgt $t1, $t0, $k1
   # %v138 = icmp ne i32 %v137, 0
    li $k1, 0
    sne $t1, $t1, $k1
   # br i1 %v138, label %b132, label %b133
    beq $t1, $zero, b133
    j b132
b128:
    move $t0, $t0
   # br label %b108
    j b108
b132:
    j b128
b133:
   # %v142 = icmp ne i32 %p4, 32
    li $k1, 32
    sne $t1, $t0, $k1
   # br i1 %v142, label %b139, label %b140
    beq $t1, $zero, b140
    j b139
b134:
   # %v143 = getelementptr inbounds [10 x i8], [10 x i8]* @str.3, i32 0, i32 0
    la $k0, str.3
    li $k1, 0
    addu $t1, $k0, $k1
   # call void @putstr(i8*  %v143)
    move $k1, $a0
    move $a0, $t1
    li $v0, 4
    syscall
    move $a0, $k1
   # br label %b126
    j b126
b139:
    j b126
b140:
   # br label %b134
    j b134
b144:
   # br label %b150
    j b150
b145:
   # br label %b146
    j b146
b146:
   # br label %b95
    j b95
b150:
   # br label %b152
    j b152
b151:
   # br label %b150
    j b150
b152:
    j b153
b153:
   # br label %b146
    j b146
b177:
   # %v182 = icmp slt i32 %p0, 10
    li $k1, 10
    slt $t0, $fp, $k1
   # %v184 = icmp ne i32 %v183, 0
    li $k1, 0
    sne $t0, $t0, $k1
   # br i1 %v184, label %b179, label %b180
    beq $t0, $zero, b180
    j b179
b178:
    li $k1, 1
   # %v186 = add i32 %p0, 1
    addu $v1, $fp, $k1
    move $k0, $v1
    sw $k0, -20($sp)
    move $v1, $t0
    lw $fp, -20($sp)
   # br label %b177
    j b177
b179:
   # %v190 = icmp slt i32 %p0, 3
    li $k1, 3
    slt $t0, $fp, $k1
   # %v192 = icmp ne i32 %v191, 0
    li $k1, 0
    sne $t0, $t0, $k1
   # br i1 %v192, label %b187, label %b214
    beq $t0, $zero, b214
    j b187
b180:
   # %v199 = getelementptr inbounds [24 x i8], [24 x i8]* @str.4, i32 0, i32 0
    la $k0, str.4
    li $k1, 0
    addu $fp, $k0, $k1
   # call void @putstr(i8*  %v199)
    move $k1, $a0
    move $a0, $fp
    li $v0, 4
    syscall
    move $a0, $k1
   # call void @putint(i32  %p2)
    move $k1, $a0
    move $a0, $v1
    li $v0, 1
    syscall
    move $a0, $k1
   # %v200 = getelementptr inbounds [2 x i8], [2 x i8]* @str.1, i32 0, i32 0
    la $k0, str.1
    li $k1, 0
    addu $v1, $k0, $k1
   # call void @putstr(i8*  %v200)
    move $k1, $a0
    move $a0, $v1
    li $v0, 4
    syscall
    move $a0, $k1
   # %v204 = getelementptr inbounds [10 x i32], [10 x i32]* %v69, i32 0, i32 0
    lw $k0, -16($sp)
    li $k1, 0
    addu $v1, $k0, $k1
   # %v205 = call i32 @calculate(i32  %p6, i32*  %v204)
    sw $v1, -168($sp)
    sw $ra, -172($sp)
    move $a0, $gp
    move $a1, $v1
    li $k0, -172
    addu $sp, $sp, $k0
    jal calculate
    lw $ra, 0($sp)
    li $k0, 172
    addu $sp, $sp, $k0
    lw $v1, -168($sp)
    move $v1, $v0
   # %v206 = icmp eq i32 %v205, 0
    li $k1, 0
    seq $v1, $v1, $k1
   # %v208 = icmp ne i32 %v207, 0
    li $k1, 0
    sne $v1, $v1, $k1
   # br i1 %v208, label %b201, label %b202
    beq $v1, $zero, b202
    j b201
b187:
   # %v195 = getelementptr inbounds [20 x i32], [20 x i32]* %v154, i32 0, i32 %p0
    lw $k0, -4($sp)
    sll $k1, $fp, 2
    addu $t0, $k0, $k1
   # %v196 = load i32, i32* %v195
    lw $t0, 0($t0)
   # %v197 = add i32 %p2, %v196
    addu $t0, $v1, $t0
    move $t0, $t0
   # br label %b188
    j b188
b214:
    move $t0, $v1
   # br label %b188
    j b188
b188:
   # br label %b178
    j b178
b201:
   # %v209 = getelementptr inbounds [12 x i8], [12 x i8]* %v70, i32 0, i32 0
    lw $k0, -12($sp)
    li $k1, 0
    addu $v1, $k0, $k1
   # %v210 = call i8 @get_first(i8*  %v209)
    sw $v1, -168($sp)
    sw $ra, -172($sp)
    move $a0, $v1
    li $k0, -172
    addu $sp, $sp, $k0
    jal get_first
    lw $ra, 0($sp)
    li $k0, 172
    addu $sp, $sp, $k0
    lw $v1, -168($sp)
    move $v1, $v0
   # call void @print(i8  %v212)
    sw $ra, -168($sp)
    move $a0, $v1
    li $k0, -168
    addu $sp, $sp, $k0
    jal print
    lw $ra, 0($sp)
    li $k0, 168
    addu $sp, $sp, $k0
   # br label %b202
    j b202
b202:
   # ret i32 0
    li $v0, 10
    syscall
add:
b0:
   # %v5 = add i32 %a0, %a1
    addu $v1, $a0, $a1
   # ret i32 %v5
    move $v0, $v1
    jr $ra
calculate:
b6:
   # %v8 = alloca i32*
    li $v1, -12
    addu $v1, $sp, $v1
   # store i32* %a1, i32** %v8
    sw $a1, 0($v1)
   # %v11 = load i32*, i32** %v8
    lw $gp, 0($v1)
   # %v12 = getelementptr inbounds i32, i32* %v11, i32 0
    li $k1, 0
    addu $gp, $gp, $k1
   # %v13 = load i32, i32* %v12
    lw $gp, 0($gp)
   # %v14 = call i32 @add(i32  %a0, i32  %v13)
    sw $gp, -16($sp)
    sw $fp, -20($sp)
    sw $v1, -24($sp)
    sw $a1, -28($sp)
    sw $a0, -32($sp)
    sw $ra, -36($sp)
    move $a1, $gp
    li $k0, -36
    addu $sp, $sp, $k0
    jal add
    lw $ra, 0($sp)
    li $k0, 36
    addu $sp, $sp, $k0
    lw $gp, -16($sp)
    lw $fp, -20($sp)
    lw $v1, -24($sp)
    lw $a1, -28($sp)
    lw $a0, -32($sp)
    move $gp, $v0
   # %v16 = load i32*, i32** %v8
    lw $fp, 0($v1)
   # %v17 = getelementptr inbounds i32, i32* %v16, i32 1
    li $k1, 4
    addu $fp, $fp, $k1
   # %v18 = load i32, i32* %v17
    lw $fp, 0($fp)
   # %v19 = sub i32 %a0, %v18
    subu $fp, $a0, $fp
   # %v20 = mul i32 %v14, %v19
    mult $gp, $fp
    mflo $gp
   # %v21 = load i32*, i32** %v8
    lw $v1, 0($v1)
   # %v22 = getelementptr inbounds i32, i32* %v21, i32 2
    li $k1, 8
    addu $v1, $v1, $k1
   # %v23 = load i32, i32* %v22
    lw $v1, 0($v1)
   # %v24 = sdiv i32 %v20, %v23
    div $gp, $v1
    mflo $v1
   # %v26 = srem i32 %v24, %a0
    div $v1, $a0
    mfhi $v1
    li $k0, 0
    li $k1, 3
   # %v27 = sub i32 0, 3
    subu $gp, $k0, $k1
    li $k0, 0
   # %v28 = sub i32 0, %v27
    subu $gp, $k0, $gp
    li $k0, 0
   # %v29 = sub i32 0, %v28
    subu $gp, $k0, $gp
   # %v30 = sub i32 %v26, %v29
    subu $v1, $v1, $gp
    li $k0, 0
    li $k1, 6
   # %v31 = sub i32 0, 6
    subu $gp, $k0, $k1
    li $k0, 0
   # %v32 = sub i32 0, %v31
    subu $gp, $k0, $gp
   # %v33 = add i32 %v30, %v32
    addu $v1, $v1, $gp
   # %v38 = icmp sle i32 %v33, 5
    li $k1, 5
    sle $v1, $v1, $k1
   # %v40 = icmp ne i32 %v39, 0
    li $k1, 0
    sne $v1, $v1, $k1
   # br i1 %v40, label %b34, label %b35
    beq $v1, $zero, b35
    j b34
b34:
   # ret i32 1
    li $v0, 1
    jr $ra
b35:
   # ret i32 0
    li $v0, 0
    jr $ra
printName:
b42:
   # %v43 = load i32, i32* @g_global_var
    la $k0, g_global_var
    lw $v1, 0($k0)
    li $k1, 1
   # %v44 = add i32 %v43, 1
    addu $v1, $v1, $k1
   # store i32 %v44, i32* @g_global_var
    la $k1, g_global_var
    sw $v1, 0($k1)
   # %v47 = load i32, i32* @g_global_var
    la $k0, g_global_var
    lw $v1, 0($k0)
   # %v48 = icmp ne i32 %v47, 0
    li $k1, 0
    sne $v1, $v1, $k1
   # br i1 %v48, label %b45, label %b46
    beq $v1, $zero, b46
    j b45
b45:
   # %v49 = getelementptr inbounds [10 x i8], [10 x i8]* @str.0, i32 0, i32 0
    la $k0, str.0
    li $k1, 0
    addu $v1, $k0, $k1
   # call void @putstr(i8*  %v49)
    move $k1, $a0
    move $a0, $v1
    li $v0, 4
    syscall
    move $a0, $k1
   # br label %b46
    j b46
b46:
   # ret void
    jr $ra
print:
b50:
   # %v53 = zext i8 %a0 to i32
    move $v1, $a0
   # call void @putch(i8  %v54)
    move $k1, $a0
    move $a0, $v1
    li $v0, 11
    syscall
    move $a0, $k1
   # %v55 = getelementptr inbounds [2 x i8], [2 x i8]* @str.1, i32 0, i32 0
    la $k0, str.1
    li $k1, 0
    addu $v1, $k0, $k1
   # call void @putstr(i8*  %v55)
    move $k1, $a0
    move $a0, $v1
    li $v0, 4
    syscall
    move $a0, $k1
   # ret void
    jr $ra
get_first:
b56:
   # %v57 = alloca i8*
    li $v1, -8
    addu $v1, $sp, $v1
   # store i8* %a0, i8** %v57
    sw $a0, 0($v1)
   # %v58 = load i8*, i8** %v57
    lw $v1, 0($v1)
   # %v59 = getelementptr inbounds i8, i8* %v58, i32 0
    li $k1, 0
    addu $v1, $v1, $k1
   # %v60 = load i8, i8* %v59
    lb $v1, 0($v1)
   # ret i8 %v62
    move $v0, $v1
    jr $ra


# finished